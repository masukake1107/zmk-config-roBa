#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt ESCAPE Q      &kp W         &kp E         &kp R                   &kp T                                                   &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D         &kp F                   &kp G        &kp ESC                     &mkp MB2       &kp H        &kp J  &kp K      &kp L    &mt LEFT_SHIFT MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                   &kp B        &kp AT                      &mkp MB1       &kp N        &kp M  &kp COMMA  &kp DOT  &lt 5 SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 6 LANG2  &lt 1 SPACE  &lt_to_layer_0 3 LANG1      &kp BACKSPACE  &lt 2 ENTER                             &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp ESCAPE        &kp F1        &kp F2   &kp F3   &kp F4                                  &kp K_MUTE       &kp LC(LS(TAB))  &kp LC(TAB)     &kp LC(T)        &kp LC(W)
&kp TAB           &kp F5        &kp F6   &kp F7   &kp F8   &kp ESCAPE      &kp PAGE_UP    &kp C_VOLUME_UP  &kp LC(LS(TAB))  &kp UP_ARROW    &kp LC(TAB)      &kp LC(W)
&kp LEFT_SHIFT    &kp F9        &kp F10  &kp F11  &kp F12  &trans          &kp PAGE_DOWN  &kp C_VOL_DN     &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp F11
&kp LEFT_CONTROL  &kp LEFT_WIN  &trans   &trans   &trans   &trans          &kp BACKSPACE  &trans                                                             &mkp MB4
            >;
        };

        NUM {
            bindings = <
&kp ESCAPE               &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS                                                   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp DOLLAR
&mt TAB PERIOD           &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp EXCLAMATION       &kp QUESTION           &kp AMPERSAND     &kp HASH           &kp PERCENT
&mt LEFT_SHIFT NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD    &kp EQUAL                    &kp EQUAL       &kp INTERNATIONAL_3   &kp AT_SIGN            &kp SLASH         &kp SQT            &kp DOUBLE_QUOTES
&kp LEFT_CONTROL         &trans        &trans        &trans        &trans        &trans                       &trans          &trans                                                                            &mkp MB4
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE        &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                        &trans  &trans  &trans    &trans    &mkp MB2
&kp TAB           &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp HOME  &trans      &trans  &trans  &trans  &mkp MB1  &mkp MB2  &mkp MB1
&kp LEFT_SHIFT    &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &kp END   &trans      &trans  &trans  &trans  &trans    &trans    &trans
&kp LEFT_CONTROL  &trans                  &trans          &trans                   &trans    &trans      &trans  &trans                              &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                        &trans  &trans    &trans    &trans    &mkp MB2
&trans  &trans  &trans  &trans  &trans  &trans      &mkp MB2  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &mkp MB1
&trans  &trans  &trans  &trans  &trans  &trans      &mkp MB1  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans    &trans                                &mkp MB4
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp PERIOD    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
